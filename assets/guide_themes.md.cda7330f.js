import{_ as e,o as s,c as a,R as t}from"./chunks/framework.ddd7a9a9.js";const D=JSON.parse('{"title":"Themes","description":"","frontmatter":{},"headers":[],"relativePath":"guide/themes.md","filePath":"guide/themes.md"}'),l={name:"guide/themes.md"},o=t(`<h1 id="themes" tabindex="-1">Themes <a class="header-anchor" href="#themes" aria-label="Permalink to &quot;Themes&quot;">â€‹</a></h1><p>Quill features two officially supported themes: <code>snow</code> and <code>bubble</code> see <a href="https://vueup.github.io/vue-quill/" target="_blank" rel="noreferrer">DEMO</a>. Themes primarily control the visual look of Quill through its CSS stylesheet, and many changes can easily be made by overriding these rules. At the very least, the <code>core</code> theme must be included for modules like toolbars or tooltips to work.</p><p>To activate a theme, import the stylesheet for the themes you want to use.</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">@vueup/vue-quill/dist/vue-quill.snow.css</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// OR | AND</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">@vueup/vue-quill/dist/vue-quill.bubble.css</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// you can use both themes at the same time and use them interchangeably</span></span></code></pre></div><p>These stylesheets can be found in the Quill distribution, but for convenience, they are also linked in VueQuill&#39;s <code>dist</code> folder.</p><p>Then, pass the name of the theme to the <a href="./../api/"><code>theme prop</code></a>.</p><div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">QuillEditor</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">theme</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">snow</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">...</span><span style="color:#89DDFF;">/&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div>`,7),n=[o];function p(c,r,i,h,u,d){return s(),a("div",null,n)}const m=e(l,[["render",p]]);export{D as __pageData,m as default};
